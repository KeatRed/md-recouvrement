@use '../../../scss/variables' as vars;
@use 'sass:map';

.legal-wrapper {
  max-width: vars.$content-max-width;
  margin: 0 auto;
  padding: map.get(vars.$spacings, md);
  font-family: 'Lato', sans-serif;

  h1 {
    font-family: 'Poppins', sans-serif;
    font-size: map.get(vars.$font-sizes, xl);
    text-align: center;
    margin-bottom: map.get(vars.$spacings, md);
    color: map.get(vars.$colors, primary);
  }

  .legal-article {
    margin-bottom: map.get(vars.$spacings, md);
    border: 1px solid map.get(vars.$colors, primary);
    border-radius: map.get(vars.$border-radius, md);
    overflow: hidden;

    .article-header {
      font-family: 'Poppins', sans-serif;
      width: 100%;
      padding: map.get(vars.$spacings, md);
      background-color: map.get(vars.$colors, light);
      border: none;
      text-align: left;
      font-size: map.get(vars.$font-sizes, base);
      font-weight: 600;
      color: map.get(vars.$colors, primary);
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;

      &:hover {
        background: map.get(vars.$colors, secondary);
      }

      .arrow {
        transition: transform map.get(vars.$transitions, base);
      }

      .arrow.open {
        transform: rotate(180deg);
      }
    }

    .article-body {
      max-height: 0;
      overflow: hidden;
      opacity: 0;
      transform-origin: top;
      transform: translateY(-20px);
      transition: 
        max-height map.get(vars.$transitions, base),
        opacity map.get(vars.$transitions, base),
        transform map.get(vars.$transitions, base),
        padding map.get(vars.$transitions, base);
      will-change: transform, opacity, max-height;
      background: #fff;

      .article-content {
        padding: 0 1rem;
      }

      .paragraph {
        margin: 0.8rem 0;
        font-size: 0.95rem;
        line-height: 1.6;
        color: #333;
        opacity: 0;
        transform: translateY(20px);
        animation: slideIn 0.5s ease-in-out forwards;
      }

      &.open {
        max-height: 1000px;
        opacity: 1;
        transform: translateY(0);
        padding: 1rem;
      }
    }

    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  }
}

@media (max-width: map.get(vars.$breakpoints, mobile)) {
  .legal-wrapper {
    padding: map.get(vars.$spacings, sm);

    h1 {
      font-size: map.get(vars.$font-sizes, lg);
    }

    .legal-article {
      .article-header {
        font-size: map.get(vars.$font-sizes, sm);
        padding: map.get(vars.$spacings, sm);
      }

      .article-body {
        p {
          font-size: 0.9rem;
        }
      }
    }
  }
}
