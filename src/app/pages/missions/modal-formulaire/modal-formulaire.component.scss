@use 'sass:map';
@use '../../../../scss/variables' as vars;

.form-popup {
  position: fixed;
  inset: 0;
  z-index: 10000;

  &__backdrop {
    position: absolute;
    inset: 0;
    background-color: rgba(map.get(vars.$colors, dark), 0.6);
    z-index: 1;
  }

  &__content {
    position: relative;
    z-index: 2;
    margin: 5vh auto;
    padding: 2rem;
    background-color: map.get(vars.$colors, light);
    border-radius: map.get(vars.$border-radius, md);
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.35);
    max-width: 1000px;
    width: 95%;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    font-family: 'Poppins', sans-serif;
    overflow-y: auto;
    max-height: 90vh;
  }

  &__texte {
    font-family: 'Lato', sans-serif;
    font-size: map.get(vars.$font-sizes, base);
    color: map.get(vars.$colors, text);

    h2 {
      font-size: map.get(vars.$font-sizes, xl);
      color: map.get(vars.$colors, primary);
      margin-bottom: 1rem;
    }

    h3 {
      font-size: map.get(vars.$font-sizes, md);
      margin: 1.5rem 0 0.5rem;
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;
      color: map.get(vars.$colors, secondary);

      .toggle-indicator {
        font-size: 1.2rem;
        font-weight: bold;
      }

      &:hover,
      &.active {
        color: map.get(vars.$colors, primary);
      }
    }

    strong {
      color: map.get(vars.$colors, secondary);
      font-weight: bold;
    }

    p {
      margin: 0.5rem 0 1rem;
      line-height: 1.6;
    }
  }

  &__section-wrapper  {
    border: 1px solid map.get(vars.$colors, gray-light);
    border-radius: map.get(vars.$border-radius, sm);
    padding-bottom: 1rem;
    padding-left: 1rem;
    padding-right: 1rem;
    margin-bottom: 1rem;
    background-color: white;
    transition: border-color 0.3s ease;
  }

  &__form {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;

    &-header {
      background-color: map.get(vars.$colors, gray-light);
      border: 1px solid lighten(map.get(vars.$colors, gray-light), 10%);
      border-radius: map.get(vars.$border-radius, md);
      padding: 1rem 1.5rem;
      margin-bottom: 1rem;

      .form-popup__form-title {
        font-size: map.get(vars.$font-sizes, md);
        font-family: 'Poppins', sans-serif;
        font-weight: 600;
        text-align: center;
        color: map.get(vars.$colors, primary);
        margin: 0;
      }
    }

    input,
    textarea {
      font-family: 'Poppins', sans-serif;
      font-size: 0.85rem;
      padding: 0.5rem 0.75rem;
      border-radius: map.get(vars.$border-radius, md);
      border: 1px solid map.get(vars.$colors, gray-light);
      background-color: white;
    }

    textarea {
      min-height: 90px;
      resize: vertical;
    }

    input[type='file'] {
      background: transparent;
      border: none;
    }

    &-buttons {
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      margin-top: 1rem;

      button {
        padding: 0.5rem 1rem;
        border-radius: map.get(vars.$border-radius, md);
        font-weight: bold;
        font-family: 'Poppins', sans-serif;
        border: none;
        cursor: pointer;
        transition: background 0.3s ease;

        &.close {
          background-color: map.get(vars.$colors, gray-light);
          color: map.get(vars.$colors, primary);;

          &:hover {
            background-color: darken(map.get(vars.$colors, gray-light), 5%);
          }
        }

        &:not(.close) {
          background-color: map.get(vars.$colors, primary);
          color: white;

          &:hover {
            background-color: darken(map.get(vars.$colors, primary), 10%);
          }
        }
      }
    }
  }
}
.form-popup__content {
  scrollbar-width: thin;
  scrollbar-color: map.get(vars.$colors, primary) transparent;

  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background-color: map.get(vars.$colors, primary);
    border-radius: 0 8px 8px 0; // âœ… arrondi uniquement Ã  droite
    border: 2px solid transparent;
    background-clip: content-box;
  }
}

/* ðŸ“± Mobile styles */
@media (max-width: 768px) {
  .form-popup__content {
    padding: 1rem !important;
    max-height: 92vh !important;
    font-size: 0.8125rem !important;
  }

  .form-popup__texte {
    font-size: 0.75rem !important;

    h2 {
      font-size: map.get(vars.$font-sizes, md) !important;
    }

    h3 {
      font-size: map.get(vars.$font-sizes, base) !important;
    }

    p {
      font-size: 0.7rem !important;
      line-height: 1.4 !important;
    }
  }

  .form-popup__form {
    input,
    textarea {
      font-size: 0.75rem !important;
      padding: 0.4rem 0.6rem !important;
    }

    .form-popup__form-buttons {
      flex-direction: column !important;
      gap: 0.5rem !important;

      button {
        font-size: 0.75rem !important;
        padding: 0.5rem 1rem !important;
      }
    }
  }
}

/* âœ¨ Animation */
@keyframes fadeSlideIn {
  from {
    opacity: 0;
    transform: translateY(-16px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animated-section {
  animation: fadeSlideIn 0.45s ease-out;
  will-change: transform, opacity;
  transform-origin: top;
}

.form-popup__texte .animated-text {
  animation: fadeInText 0.4s ease forwards;
}
